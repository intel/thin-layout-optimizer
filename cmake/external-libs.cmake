function(find_package_vars PACKAGE PACKAGE_PATH PACKAGE_INCLUDE_DIR_OUT PACKAGE_STATIC_LIB_OUT PACKAGE_SHARED_LIB_OUT)
  if(PACKAGE_PATH)
    find_path(PACKAGE_INCLUDE_DIR
      NAMES "${PACKAGE}.h"
      PATHS "${PACKAGE_PATH}/include"
      NO_CACHE
      NO_DEFAULT_PATH
      NO_PACKAGE_ROOT_PATH
      NO_CMAKE_PATH
      NO_CMAKE_ENVIRONMENT_PATH
      NO_SYSTEM_ENVIRONMENT_PATH
      NO_CMAKE_SYSTEM_PATH
      NO_CMAKE_FIND_ROOT_PATH
    )

    find_library(PACKAGE_STATIC_LIB
      NAMES "lib${PACKAGE}.a"
      PATHS "${PACKAGE_PATH}/lib"
      NO_CACHE
      NO_DEFAULT_PATH
      NO_PACKAGE_ROOT_PATH
      NO_CMAKE_PATH
      NO_CMAKE_ENVIRONMENT_PATH
      NO_SYSTEM_ENVIRONMENT_PATH
      NO_CMAKE_SYSTEM_PATH
      NO_CMAKE_FIND_ROOT_PATH
    )

    find_library(PACKAGE_SHARED_LIB
      NAMES "lib${PACKAGE}.so"
      PATHS "${PACKAGE_PATH}/lib"
      NO_CACHE
      NO_DEFAULT_PATH
      NO_PACKAGE_ROOT_PATH
      NO_CMAKE_PATH
      NO_CMAKE_ENVIRONMENT_PATH
      NO_SYSTEM_ENVIRONMENT_PATH
      NO_CMAKE_SYSTEM_PATH
      NO_CMAKE_FIND_ROOT_PATH
    )

    set(${PACKAGE_INCLUDE_DIR_OUT} ${PACKAGE_INCLUDE_DIR} PARENT_SCOPE)
    set(${PACKAGE_STATIC_LIB_OUT} ${PACKAGE_STATIC_LIB} PARENT_SCOPE)
    set(${PACKAGE_SHARED_LIB_OUT} ${PACKAGE_SHARED_LIB} PARENT_SCOPE)
  endif()

endfunction()


function(find_package_vars_gtest PACKAGE PACKAGE_PATH PACKAGE_INCLUDE_DIR_OUT PACKAGE_LIB_OUT PACKAGE_MAIN_LIB_OUT LIBTYPE)
  if(PACKAGE_PATH)
    find_path(PACKAGE_INCLUDE_DIR
      NAMES "${PACKAGE}/${PACKAGE}.h"
      PATHS "${PACKAGE_PATH}/include"
      NO_CACHE
      NO_DEFAULT_PATH
      NO_PACKAGE_ROOT_PATH
      NO_CMAKE_PATH
      NO_CMAKE_ENVIRONMENT_PATH
      NO_SYSTEM_ENVIRONMENT_PATH
      NO_CMAKE_SYSTEM_PATH
      NO_CMAKE_FIND_ROOT_PATH
    )

    find_library(PACKAGE_LIB
      NAMES "lib${PACKAGE}.${LIBTYPE}"
      PATHS "${PACKAGE_PATH}/lib"
      NO_CACHE
      NO_DEFAULT_PATH
      NO_PACKAGE_ROOT_PATH
      NO_CMAKE_PATH
      NO_CMAKE_ENVIRONMENT_PATH
      NO_SYSTEM_ENVIRONMENT_PATH
      NO_CMAKE_SYSTEM_PATH
      NO_CMAKE_FIND_ROOT_PATH
    )

    find_library(PACKAGE_MAIN_LIB
      NAMES "lib${PACKAGE}_main.${LIBTYPE}"
      PATHS "${PACKAGE_PATH}/lib"
      NO_CACHE
      NO_DEFAULT_PATH
      NO_PACKAGE_ROOT_PATH
      NO_CMAKE_PATH
      NO_CMAKE_ENVIRONMENT_PATH
      NO_SYSTEM_ENVIRONMENT_PATH
      NO_CMAKE_SYSTEM_PATH
      NO_CMAKE_FIND_ROOT_PATH
    )

    set(${PACKAGE_INCLUDE_DIR_OUT} ${PACKAGE_INCLUDE_DIR} PARENT_SCOPE)
    set(${PACKAGE_LIB_OUT} ${PACKAGE_LIB} PARENT_SCOPE)
    set(${PACKAGE_MAIN_LIB_OUT} ${PACKAGE_MAIN_LIB} PARENT_SCOPE)
  endif()

endfunction()
